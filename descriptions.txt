-----------------------------------------------------------------------------------------------------------------------------------

PROMPT FOR NEW DESCRIPTIONS:

Tier list definitions:
X = 100+ (Transcendent)
S++ = 97 - 100 (Phenomenal)
S+ = 94 - 97 (Elite)
S = 91 - 94 (Excellent)
A = 88 - 91 (Very Good)
B = 84 - 88 (Good)
C = 80 - 84 (Above Average)
D = 75 - 80 (Average)
E = 70 - 75 (Below Average)
Unranked = Below 70 (Insufficient/Unqualified)

My game rates pokémon decks based on this information:

A sophisticated algorithm that analyzes thousands of tournament matches to understand the meta landscape: "What does typical performance look like?" It then ranks each deck by intelligently blending two sources—what the broader meta shows AND what this specific deck's results demonstrate.

The balancing mechanism is elegant: decks with limited matches are gently regularized toward the meta average for stability, yet truly exceptional performers can still break through and rank highly if their win rate is outstanding enough. Extensively-played decks rely almost purely on their own merit. The algorithm dynamically adapts to meta conditions—remaining conservative when decks cluster tightly, but allowing meaningful separation when clear power tiers emerge.

Using Bayesian inference with Beta-Binomial distributions, it calculates meta-wide patterns (mean μ and variance σ²) as prior knowledge, then updates each deck's posterior as Beta(α + wins, β + losses) where ties counts as 0.5 wins and losses. Weight shifts based on evidence: n/(n + α + β). Final rankings use the lower confidence bound, rewarding battle-tested consistency while still recognizing breakout performers.

Result: Context-aware rankings from 0-100 that harmonize meta intelligence with individual performance, producing fair assessments even with incomplete data.


Your task is now to create different descriptions with specific rules, that makes sure every deck has a description. It should be able to generate different descriptions based on performance. Here are some examples:

1. Requirements: Deck is ranked 1st overall, has the highest count of tournament entries (most popular), and adjusted win rate >52%.
Template: "{deck_name} is dominating the meta right now, with the biggest player base at {share}% share and a reliable {adjusted_win_rate}% adjusted win rate."

2. Requirements: Deck has <1/10th the tournament entries of the most popular deck, but rating >=91 (S tier or above).
Template: "Even with fewer players jumping in ({count} entries), {deck_name} stands out in {tier} tier at {rating}, thanks to its impressive {adjusted_win_rate}% adjusted win rate."

Default Template (for any deck not matching above):
Requirements: Always applies if no other template fits (e.g., B-tier decks or edge cases).
Template: "{deck_name} sits comfortably in {tier}-tier at {rating}, with a {adjusted_win_rate}% adjusted win rate across its matches."


Here are some card info being stored when you create these descriptions:

Card info:

1. Rating (Deck Strength Score)
(using Hierarchical Bayesian Estimation to rate the card between 0 and 100 based on win %, player count and more, will be the tier list and official rating of the card)

2. Wins, Losses, Ties
Display: Raw counts as W - L - T.
Why display?: Provides transparency into the data foundation.
Example (Suicune ex Greninja): 6,992 - 5,971 - 306.

3. Win % and Adjusted Win Rate
Calculations:
Win % = (Wins / Total Matches) × 100.
Adjusted Win Rate = [(Wins + 0.5 × Ties) / Total Matches] × 100.
Why display?: Win % is straightforward; Adjusted fairly accounts for ties (common in TCG). Show side-by-side for easy comparison.
Example (Suicune ex Greninja): Win % = 52.69% | Adjusted Win Rate = 53.85%.

4. Matches Played
Calculation: Wins + Losses + Ties.
Why display?: Shows data volume for reliability (pairs well with Confidence Interval—see new stat below).
Example (Suicune ex Greninja): 13,269

5. Popularity Metrics: Count (Tournament Entries) and Share (% of Meta)
Calculation:
Count: Number of times the deck appeared in tournaments.
Share = (Count / Total Entries Across All Decks) × 100.
Why display?: Measures popularity; high Share indicates meta staple.
Improvement: Calculate Total Entries dynamically from your dataset. Add a "Trend" arrow (↑/↓) based on change from previous period.
Example (Suicune ex Greninja): Count = 2,466; Share = 19.35% (assuming total entries ~12,744 based on top 10 sums and shares).

6. Average Matches per Entry
Calculation: Total Matches / Count
Why display?: Indicates deck longevity or success in tournaments (e.g., stronger decks play more games if tournaments have elimination brackets). Higher values suggest the deck advances further on average.
Example (Suicune ex Greninja): 13,269 / 2,466 ≈ 5.38

7. Meta impact
Calculation: Win % × Share (or Adjusted Win Rate × Share for a variant)
Why display?: Combines popularity (Share) with performance (Win %) to show "meta impact." Higher values highlight dominant decks that are both common and successful.
Example (Suicune ex Greninja): 52.69 × 19.35 ≈ 1,019.67

Here are the recent top 30 decks for reference when you write the new descriptions:

Rank	Deck	W	L	T	Games	Win %	Adjusted Win %	Strength
1	Suicune ex Greninja	6802	5798	299	12899	52.73%	53.89%	94.77
2	Giratina ex Darkrai ex	3895	3451	211	7557	51.54%	52.93%	92.38
3	Greninja Oricorio	514	401	41	956	53.77%	55.88%	92.20
4	Guzzlord ex	2044	1900	97	4041	50.60%	51.80%	89.25
5	Flareon ex Eevee ex	1499	1386	49	2934	51.07%	52.00%	88.83
6	Arceus ex Tapu Koko ex	106	69	7	182	58.24%	60.16%	87.91
7	Suicune ex Giratina ex	415	358	17	790	52.53%	53.59%	87.50
8	Pikachu ex Tapu Koko ex	180	141	10	331	54.38%	55.87%	86.46
9	Espeon ex Sylveon ex	849	806	31	1686	50.35%	51.25%	86.25
10	Silvally Rampardos	424	385	23	832	50.96%	52.36%	85.61
11	Darkrai ex Arceus ex	683	649	27	1359	50.24%	51.23%	85.54
12	Arceus ex Pichu	530	503	15	1048	50.57%	51.29%	84.72
13	Silvally Zeraora	378	348	17	743	50.88%	51.99%	84.59
14	Buzzwole ex Pheromosa	652	636	22	1310	49.77%	50.61%	84.32
15	Pikachu ex Oricorio	79	54	7	140	56.43%	58.21%	83.87
16	Charizard ex	350	328	16	694	50.43%	51.56%	83.58
17	Dragonite ex Sylveon ex	321	305	7	633	50.71%	51.29%	82.66
18	Raikou ex Tapu Koko ex	284	267	11	562	50.53%	51.48%	82.52
19	Tapu Koko ex Pikachu ex	208	189	5	402	51.74%	52.49%	82.20
20	Decidueye ex Decidueye	356	351	28	735	48.44%	50.34%	81.77
21	Snorlax ex Darkrai ex	151	133	6	290	52.07%	53.10%	81.45
22	Guzzlord ex Naganadel	189	177	10	376	50.27%	51.60%	80.66
23	Tapu Koko ex Oricorio	315	321	9	645	48.84%	49.53%	79.92
24	Buzzwole ex Celesteela	153	145	8	306	50.00%	51.31%	79.11
25	Skarmory ex	131	121	7	259	50.58%	51.93%	79.06
26	Crobat ex Darkrai ex	159	153	2	314	50.64%	50.96%	78.73
27	Giratina ex Darkrai ex	49	35	4	88	55.68%	57.95%	78.50
28	Umbreon ex Eevee ex	197	198	5	400	49.25%	49.88%	78.33
29	Flareon ex Sylveon ex	135	129	11	275	49.09%	51.09%	78.20
30	Suicune ex Greninja	83	72	13	168	49.40%	53.27%	78.14


Here are some different conditions, feel free to expand on these:

popularity_ratio = count / max_count

top_pop_ratio_threshold = 0.95 (dominators: within 95% of the top deck — typically only the #1 deck will pass)

staple_ratio_threshold = 0.50 (meta staple: played at least half as often as the most-played deck)

underplayed_ratio_threshold = 0.10 (underplayed: ≤10% of the most-played deck)

matches_high_pctile = 75 (top 25% by matches = high-confidence)

matches_low_pctile = 20 (bottom 20% = low sample)

meta_breakout_std_multiplier = 0.75 (breakout if adj_win >= meta_mean + 0.75*meta_std)

meta_dominance_std_multiplier = 1.0 (dominator if adj_win >= meta_mean + 1.0*meta_std)

meta_impact_top_pctile = 90 (meta-impact leaders in top 10% by meta_impact)


Provide new and improved descriptions that are engaging, fun and feel personal for different cards. Do NOT hardcode anything, it should work regardless if theree are thousands of entries or less than 100%. For example do not say "if it's played more than 500 times", instead say "if it's top 10% in matched played" for example. Or if it's in the top or bottom % within different metrics.

--------------------------------------------------------------------------------------

A. Absolute dominator

Condition (recommended): popularity_rank == 1 AND popularity_ratio >= top_pop_ratio_threshold AND adjusted_win_rate >= meta_mean + meta_dominance_std_multiplier * meta_std
Template:
"{deck_name} is dominating the meta right now — it's the biggest presence (≈{share}% of entries) and holds a dependable {adjusted_win_rate}% adjusted win rate, making it the deck to beat (rating: {rating}, {tier})."
Optional short stat line: W-L-T = {W}-{L}-{T} | Matches = {matches}

B. Meta staple

Condition: popularity_ratio >= staple_ratio_threshold AND rating >= 84
Template:
"{deck_name} is a meta staple — played in about {share}% of events and sitting at {rating} ({tier}). Its {adjusted_win_rate}% adjusted win rate keeps it reliable on ladder and in brackets."
Variant: mention {avg_matches_per_entry} optionally.

C. Underplayed elite (hidden gem)

Condition: popularity_ratio <= underplayed_ratio_threshold AND rating >= 91
Template:
"Even with fewer players jumping in ({count} entries — ~{popularity_ratio:.1%} of the busiest archetype), {deck_name} stands out in {tier} tier at {rating}, thanks to an impressive {adjusted_win_rate}% adjusted win rate."
Variant: add emoji 🕵️‍♀️ for UI.

D. Breakout performer

Condition: rating >= 91 AND adjusted_win_rate >= meta_mean + meta_breakout_std_multiplier*meta_std AND matches_pctile > matches_low_pctile
Template:
"{deck_name} is looking like a breakout: {rating} ({tier}) with {adjusted_win_rate}% adjusted win rate — the meta is starting to take notice."
Optional: include {meta_impact} if high.

E. High-confidence consistent

Condition: matches_pctile >= matches_high_pctile AND rating >= 84 AND CI_width <= median_CI_width
Template:
"{deck_name} is quietly consistent: {W}-{L}-{T} across {matches} games, {adjusted_win_rate}% adjusted win rate and a steady {rating} ({tier}) — dependable and battle-tested."

F. Volatile / High-variance (promising but small sample)

Condition: rating >= 84 AND matches_pctile <= matches_low_pctile OR CI_width very wide
Template:
"{deck_name} shows upside ({rating}, {tier}) with a {adjusted_win_rate}% adjusted win rate, but the sample is small ({matches} games) — promising, but read the confidence carefully."

G. Meta impact leader

Condition: meta_impact >= meta_impact_percentile_threshold (e.g., in top 10%), and popularity_ratio not tiny (e.g., >= 0.05)
Template:
"{deck_name} shapes the meta — widely played ({share}% of entries) and successful ({adjusted_win_rate}% adjusted win rate), giving it a major meta-impact (rating: {rating}, {tier})."

H. Newcomer / Rising

Condition: trend_arrow == '↑' AND recent growth percentile high AND popularity_ratio still low (e.g., ≤ 0.25)
Template:
"{deck_name} is on the rise {trend_arrow} — recent events show growing adoption and a {adjusted_win_rate}% adjusted win rate. Keep an eye on this one."

I. Fading / Declining

Condition: trend_arrow == '↓' AND drop in recent share vs previous period significant (use relative drop %)
Template:
"{deck_name} is cooling off {trend_arrow} — still rated {rating} ({tier}), but entries and matches have dipped recently. Could be a meta pivot."

J. Low-sample uncertain

Condition: matches_pctile <= matches_low_pctile AND popularity_ratio small — especially when rating is near boundary
Template:
"{deck_name} has limited data ({matches} matches). The model gives it {rating} ({tier}), but confidence is low — more tournaments will clarify its true power."

K. Unranked / Insufficient

Condition: rating < 70
Template:
"{deck_name} is currently unranked (rating {rating}) — it hasn't yet shown consistent results. Worth revisiting if participation or win rate improves."

L. Tight-cluster conservative language

Condition: meta_std very small (meta tightly clustered) AND deck sits near median rating
Template:
"{deck_name} sits at {rating} ({tier}) in a tightly packed meta — small edges matter here. Its {adjusted_win_rate}% adjusted win rate keeps it competitive, but margins are thin."

M. Default fallback

Condition: none of the above matched
Template:
"{deck_name} sits comfortably in {tier}-tier at {rating}, with a {adjusted_win_rate}% adjusted win rate across its matches ({W}-{L}-{T})."